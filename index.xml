<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kendra Creates</title><link>https://kpendolino.github.io/KendraCreates/</link><description>Recent content on Kendra Creates</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; Kendra Pendolino 2022</copyright><lastBuildDate>Mon, 18 Apr 2022 20:25:57 -0400</lastBuildDate><atom:link href="https://kpendolino.github.io/KendraCreates/index.xml" rel="self" type="application/rss+xml"/><item><title>Solving Water Sort, Part 1</title><link>https://kpendolino.github.io/KendraCreates/2022/04/18/solving_water_sort/</link><pubDate>Mon, 18 Apr 2022 20:25:57 -0400</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/04/18/solving_water_sort/</guid><description>You may have seen ads for the Water Sort puzzle game. In case you haven&amp;rsquo;t, it&amp;rsquo;s a pretty standard puzzle game: you&amp;rsquo;ve got n+2 test tubes filled with n different colors. Your job is to pour from one test tube into another until the colors are all sorted out into their own test tubes. The only rule is you can only pour into a tube that is either empty or that has open space over another section of the same color.</description></item><item><title>Creating Data Sets</title><link>https://kpendolino.github.io/KendraCreates/2022/04/02/creating_data_sets/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/04/02/creating_data_sets/</guid><description>We&amp;rsquo;ve all been there: you&amp;rsquo;re digging around for a freely-available data set that&amp;rsquo;s interesting, Goldilocks-sized, and has the right types of data fields to support your learning objectives. You&amp;rsquo;re an hour or two deep in searching, and nothing you find seemes quite right. What&amp;rsquo;s an instructional designer to do?
Well, if you&amp;rsquo;re me, the answer seems obvious: create a simulated data set to use in your examples. I&amp;rsquo;ve done this in technical writing contexts as well, when I needed to use &amp;ldquo;patient data&amp;rdquo; in some examples but of course could not use data for actual patients.</description></item><item><title>Pandas DataFrames</title><link>https://kpendolino.github.io/KendraCreates/2022/04/02/pandas_dataframes/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/04/02/pandas_dataframes/</guid><description>Working with Pandas DataFrames Pandas uses the DataFrame class for working with tabular data. DataFrames allow you to read, sort, manipulate, and display data. In this exercise, you&amp;rsquo;ll create your first DataFrame and use it to do some initial exploration of a data set.
Objectives When you finish this lab, you should be comfortable with:
Loading data into a DataFrame from a CSV file Printing out the first or last five rows Viewing DataFrame attributes like its columns and shape Accessing individual columns Manipulating the data set including sorting, ranking, and grouping Adding new columns and populating them with generated data Changing the data type of a column Filtering data by column values using loc and numerical or qualitative values We&amp;rsquo;ll build on these further in the next lab.</description></item><item><title>Tic Tac Toe</title><link>https://kpendolino.github.io/KendraCreates/2022/03/30/tic_tac_toe/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/30/tic_tac_toe/</guid><description>Have you ever wondered how many unique games of Tic-Tac-Toe there are? This question snuck into my brain the other day and I just had to find out. Come with me and see! My full source code for this exercise, including comments and random debugging notes that I omitted in this post, can be seen at https://replit.com/@KendraPendolino/TicTacToe.
Before we dive in, I want to talk a little bit about equivalent boards.</description></item><item><title>Let There Be Dark</title><link>https://kpendolino.github.io/KendraCreates/2022/03/28/let_there_be_dark/</link><pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/28/let_there_be_dark/</guid><description>Kendra Creates is based on the Blackburn theme for Hugo. Blackburn is a sleek, light theme and a great starting point, but it didn&amp;rsquo;t include support for dark themes out of the box. In this post, we&amp;rsquo;ll look at how I added a dark theme to Kendra Creates.
Credit where credit is due - the code I wrote to add dark theme support is based on the process documented by Atanas Yonkov at Switching Off The Lights Part Two - Adding Dark Mode to Hugo.</description></item><item><title>Meet Hugo</title><link>https://kpendolino.github.io/KendraCreates/2022/03/27/meet_hugo/</link><pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/27/meet_hugo/</guid><description>When I first set up Kendra Creates, I went with the lowest barrier-to-entry: GitHub Pages, Jekyll, and a simple Jekyll theme. I made some changes and got everything set up, and quickly realized that I wanted something fuller featured. My husband, @dpendolino, recommended switching from Jekyll to Hugo to take full advantage of its features including post taxonomies and syntax highlighting. So I embarked on the process of switching to Hugo.</description></item><item><title>Swedish Weaving</title><link>https://kpendolino.github.io/KendraCreates/2022/03/27/swedish_weaving/</link><pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/27/swedish_weaving/</guid><description>In the last year, I&amp;rsquo;ve gotten hooked on a new-to-me craft. Swedish weaving, also known as huck embroidery, first caught my attention years ago when I saw a cousin doing this very cool looking geometric embroidery on a throw blanket. I finally tried it over the summer of 2021 and discovered that it&amp;rsquo;s fun, works up quickly, and produces stunning results. Take a look for yourself:
Swedish weaving is worked on a fabric with vertical &amp;ldquo;floats&amp;rdquo; on the surface of the fabric.</description></item><item><title>Project Euler - Problem 93</title><link>https://kpendolino.github.io/KendraCreates/2022/03/26/project_euler_p93/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/26/project_euler_p93/</guid><description>Emboldened by my recent completion of Project Euler 96, I decided to take a crack at another problem: Problem 93. You can read the full text of the problem at the link above, but the gist of it is this: working with a set of four distinct individual digits, arranged in any order, with any combination of parentheses and basic mathematical operations (+, -, /, *), which combination of digits can form the longest string of consecutive positive integers from 1 to n before reaching an integer that can&amp;rsquo;t be formed using those digits?</description></item><item><title>Sudoku Solver - Day 5</title><link>https://kpendolino.github.io/KendraCreates/2022/03/24/sudoku_solver5/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/24/sudoku_solver5/</guid><description>Looks like this project is done! I plugged the semi-solved Grid 42 into a sudoku app to check for the next step, and immediately saw it: locked intersections. This happens when all of the candidates for a given digit in a box appear in the interesction of that box and a row/column or vice versa. If every cell that could contain a 1 in box 0 is in row 0, you know that the digit 1 can&amp;rsquo;t appear anywhere else in row 0.</description></item><item><title>Sudoku Solver - Day 4</title><link>https://kpendolino.github.io/KendraCreates/2022/03/23/sudoku_solver4/</link><pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/23/sudoku_solver4/</guid><description>WELL turns out I had a glitch in my code. Let&amp;rsquo;s recap where the last installment left off. My algorithm thought that this was fully solved:
829|31 |475 5 7|489|123 1 4|275|689 ---+---+--- 2 3|64 |9 7 461|927|538 97 |138|246 ---+---+--- 713|852|694 92|764|851 648|3 |7 2 So, that&amp;rsquo;s a miss. I went back through my code to identify the issue and discovered that there was a bug in my hiddenPairs code.</description></item><item><title>Sudoku Solver - Day 3</title><link>https://kpendolino.github.io/KendraCreates/2022/03/22/sudoku_solver3/</link><pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/22/sudoku_solver3/</guid><description>The next order of business was to see how far we could get solving using only naked singles and hidden singles.
easy=[ [0,5,0,4,0,9,0,0,2], [4,0,0,6,0,0,0,7,0], [0,0,2,0,0,0,8,0,9], [0,0,0,0,3,0,0,0,7], [0,0,4,0,0,0,3,6,0], [0,0,0,0,2,0,0,0,4], [0,0,3,0,0,0,7,0,5], [1,0,0,3,0,0,0,2,0], [0,4,0,7,0,8,0,0,1]] gr=Grid(easy) gr.solve() 358|479|612 491|682|573 672|153|849 ---+---+--- 816|534|297 524|917|368 739|826|154 ---+---+--- 963|241|785 187|395|426 245|768|931 Score: 0 Sum: 405 Oh, ok. I guess I&amp;rsquo;ll keep going then.
moderate = [ [8,0,0,0,6,0,0,0,3], [0,0,2,0,0,0,4,0,0], [0,3,6,2,0,4,7,8,0], [0,0,1,3,0,7,5,0,0], [4,0,0,0,5,0,0,0,7], [0,0,8,1,0,6,2,0,0], [0,8,9,4,0,1,3,7,0], [0,0,4,0,0,0,8,0,0], [3,0,0,0,7,0,0,0,2]] Grid(moderate).solve() 847|569|123 192|783|456 536|214|789 ---+---+--- 921|347|568 463|852|917 758|196|234 ---+---+--- 689|421|375 274|635|891 315|978|642 Score: 0 Sum: 405 Oh.</description></item><item><title>Sudoku Solver - Day 2</title><link>https://kpendolino.github.io/KendraCreates/2022/03/21/sudoku_solver2/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/21/sudoku_solver2/</guid><description>Today&amp;rsquo;s work had some ups and downs for sure. Once again, if you want to follow along, you can see my code here: @KendraPendolino/UnlinedSeashellMineral. I started by adding basic elimination for cells in the same group as a solved cell. While there, I realized I had forgotten to put in a reference from the cell back to the grid, so I added that too.
class Cell(): ... def setGrid(self,grid): self.grid=grid def solve(self,value): self.</description></item><item><title>Sudoku Solver - Day 1</title><link>https://kpendolino.github.io/KendraCreates/2022/03/20/sudoku_solver1/</link><pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/20/sudoku_solver1/</guid><description>I wasn&amp;rsquo;t able to get as much done today as I&amp;rsquo;d hoped, but I did get started with it. I&amp;rsquo;m doing my coding using Replit.com; you can see my code here: @KendraPendolino/UnlinedSeashellMineral. So, let&amp;rsquo;s see what we have so far.
I found a very easy sudoku puzzle to start with. Here it is as a two-dimensional array.
test = [ [0,0,6,9,0,1,2,0,0], [0,2,0,3,0,4,0,7,0], [1,0,0,0,7,0,0,0,8], [4,6,0,0,0,0,0,2,5], [0,0,3,0,0,0,7,0,0], [7,9,0,0,0,0,0,6,4], [6,0,0,0,3,0,0,0,7], [0,4,0,2,0,9,0,8,0], [0,0,8,7,0,6,5,0,0]] I made some game-day changes to the setup.</description></item><item><title>Sudoku Solver - Day 0</title><link>https://kpendolino.github.io/KendraCreates/2022/03/19/sudoku_solver0/</link><pubDate>Sat, 19 Mar 2022 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/2022/03/19/sudoku_solver0/</guid><description>I got the idea for this project from Project Euler. If you&amp;rsquo;re someone who likes tinkering with code and algorithms, I highly recommend checking out Project Euler to add a little something extra to your personal and professional development.
Anyway, here&amp;rsquo;s the project: I want to create a sudoku-solving algorithm. That&amp;rsquo;s it, really. It&amp;rsquo;s nothing particularly groundbreaking, but I want to do it for myself and capture my thought process along the way.</description></item><item><title>Kendra Creates</title><link>https://kpendolino.github.io/KendraCreates/about/</link><pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/about/</guid><description>Welcome to Kendra Creates Hi everyone!
I&amp;rsquo;m Kendra Pendolino (She/Her), and I like to make things. What I&amp;rsquo;m making on any given day could be a craft, a programming project, or a combination of the two - I&amp;rsquo;m a bit of a grab-bag. So welcome to my little corner of the internet, where I&amp;rsquo;ll write about whatever little project is making my heart sing today.
Thanks for joining me 😊</description></item><item><title/><link>https://kpendolino.github.io/KendraCreates/cv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kpendolino.github.io/KendraCreates/cv/</guid><description>[Kendra.Pendolino@gmail.com](mailto: kendra.pendolino@gmail.com)
Kendra Pendolino (She/Her) Skills SOFTWARE - MS Office Suite, LaTeX, Adobe Acrobat Pro, Adobe Captivate, MadCap Flare, MadCap Capture, Jira, Confluence, Linux/UNIX systems, IntelliJ IDEA
TECHNICAL - Familiar with REST APIs, XML, HTML, XHTML, CSS, Markdown, Java, Javascript, Python, Regular Expressions, PHP, SVN, Git/GitLab, GitPages, CI/CD, SQL/MySQL, Maven; able to rapidly acquire new skills
Recent Experience Change Healthcare — Sr. Technical Writer &amp;amp; Instructional Designer 2015 - Present Remote</description></item></channel></rss>